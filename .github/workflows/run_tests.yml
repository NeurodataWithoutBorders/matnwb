# Run and publish MATLAB tests with coverage across multiple MATLAB versions
name: Run tests
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "*.md"
      - "*.codespellrc"
    push:
    branches:
      - main
jobs:
  run_tests:
    name: Run MATLAB tests (${{ matrix.matlab-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        matlab-version: [R2021a, R2022a, R2023a, R2024a]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Configure python env
        run: |
          python -m pip install -U pip
          pip install -r +tests/requirements.txt
          python -m pip list
          echo "HDF5_PLUGIN_PATH=$(python -c "import hdf5plugin; print(hdf5plugin.PLUGINS_PATH)")" >> "$GITHUB_ENV"
          echo $( python -m pip show nwbinspector | grep ^Location: | awk '{print $2}' )
      - name: Install MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: ${{ matrix.matlab-version }}
      - name: Run tests
        uses: matlab-actions/run-command@v2
        with:
          command: |
            pyenv("ExecutionMode", "OutOfProcess");
            results = assertSuccess(nwbtest('ReportOutputFolder', '.')); 
            assert(~isempty(results), 'No tests ran');
      - name: Upload JUnit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.matlab-version }}
          path: testResults.xml
          retention-days: 1
      - name: Upload coverage results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-${{ matrix.matlab-version }}
          path: ./coverage.xml
  publish_junit:
    name: Publish JUnit test results
    runs-on: ubuntu-latest
    if: always()
    needs: [run_tests]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Retrieve result files
        uses: actions/download-artifact@v4
        with:
          pattern: test-results-*
          merge-multiple: true
      - name: Publish test results
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: 'testResults*.xml'
  publish_coverage:
    name: Publish Cobertura test coverage
    runs-on: ubuntu-latest
    needs: [run_tests]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Retrieve code coverage files
        uses: actions/download-artifact@v4
        with:
          pattern: test-coverage-*
          merge-multiple: true
      - name: Publish on coverage results on Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage*.xml
          name: codecov-matnwb
          verbose: true
          flags: matlab-${{ matrix.matlab-version }}
