classdef UnitTimesIOTest < tests.system.PyNWBIOTest
    methods
        function addContainer(~, file)
            file.units = types.core.Units( ...
                'colnames', {'spike_times'; 'waveform_mean'; 'waveform_sd'; 'waveforms'} ...
                , 'description', 'data on spiking units' ...
                );
            
            file.units.addRow( ...
                'spike_times', 11 ...
                , 'waveforms', int32(9) ...
                , 'waveform_sd', 7 ...
                , 'waveform_mean', 5 ...
                );
            % the following is solely for a2a comparison with files.
            file.units.spike_times.description = 'the spike times for each unit';
            file.units.waveforms.description = ['Individual waveforms for each spike. ' ...
                'If the dataset is three-dimensional, the third dimension shows the response ' ...
                'from different electrodes that all observe this unit simultaneously. ' ...
                'In this case, the `electrodes` column of this Units table should be used to ' ...
                'indicate which electrodes are associated with this unit, ' ...
                'and the electrodes dimension here should be in the same order as the ' ...
                'electrodes referenced in the `electrodes` column of this table.'];
            file.units.waveform_sd.description = ['the spike waveform standard deviation for each ' ...
                'spike unit'];
            file.units.waveform_mean.description = 'the spike waveform mean for each spike unit';
            file.units.spike_times_index = types.hdmf_common.VectorIndex( ...
                'target', types.untyped.ObjectView(file.units.spike_times) ...
                , 'description', 'Index for VectorData ''spike_times''' ...
                , 'data', 1 ...
                );
            file.units.waveforms_index = types.hdmf_common.VectorIndex( ...
                'target', types.untyped.ObjectView(file.units.waveforms) ...
                , 'description', 'Index for VectorData ''waveforms''' ...
                , 'data', 1 ...
                );
            file.units.waveforms_index_index = types.hdmf_common.VectorIndex( ...
                'target', types.untyped.ObjectView(file.units.waveforms_index) ...
                , 'description', 'Index for VectorData ''waveforms_index''' ...
                , 'data', 1 ...
                );

            % set optional hidden vector data attributes
            file.units.spike_times.resolution = 3;
            Units = file.units;
            [Units.waveform_mean.sampling_rate ...
                , Units.waveform_sd.sampling_rate ...
                , Units.waveforms.sampling_rate ... 
                ] = deal(1);
        end
        
        function c = getContainer(~, file)
            c = file.units;
        end
    end
end