classdef RegionViewTest < tests.unit.abstract.SchemaTest

    properties (Constant)
        SchemaFolder = "regionReferenceSchema"
        SchemaNamespaceFileName = "rrs.namespace.yaml"
    end

    properties (Constant, Access = private)
        NumRegionViewsToTest = 5
    end

    methods (Test)
        function testRegionViewIo(testCase)
            nwb = NwbFile(...
                'identifier', 'REGIONREF',...
                'session_description', 'region ref test',...
                'session_start_time', datetime());
            
            rcContainer = types.rrs.RefContainer(...
                'data', types.rrs.RefData('data', rand(10, 10, 10, 10, 10)));
            nwb.acquisition.set('refdata', rcContainer);
            
            for i = 1:testCase.NumRegionViewsToTest
                rcAttrRef = types.untyped.RegionView(...
                    rcContainer.data,...
                    randi(10),...
                    randi(10),...
                    randi(10),...
                    randi(10),...
                    randi(10));
                rcDataRef = types.untyped.RegionView(...
                    rcContainer.data,...
                    1:randi(10),...
                    1:randi(10),...
                    1:randi(10),...
                    1:randi(10),...
                    1:randi(10));
                nwb.acquisition.set(sprintf('ref%d', i),...
                    types.rrs.ContainerReference(...
                    'attribute_regref', rcAttrRef,...
                    'data_regref', rcDataRef));
            end
            nwb.export('test.nwb');
            nwbActual = nwbRead('test.nwb', 'ignorecache');
            tests.util.verifyContainerEqual(testCase, nwbActual, nwb);
            
            for i = 1:testCase.NumRegionViewsToTest
                refName = sprintf('ref%d', i);
                reference = nwb.acquisition.get(refName);
                testCase.verifyEqual(reference.attribute_regref.refresh(nwb),...
                    reference.attribute_regref.refresh(nwbActual));
            end
        end
    end
end
