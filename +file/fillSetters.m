function fsstr = fillSetters(propnames, classprops)
fsstr = cell(size(propnames));
for i=1:length(propnames)
    nm = propnames{i};
    prop = classprops(nm);
    postsetFunctionStr = resolvePostsetFunction(nm, prop);
    if isempty(postsetFunctionStr)
        fsstr{i} = strjoin({...
            ['function set.' nm '(obj, val)']...
            ['    obj.' nm ' = obj.validate_' nm '(val);'] ...
            'end'}, newline);
    else
        fsstr{i} = strjoin({...
            ['function set.' nm '(obj, val)']...
            ['    obj.' nm ' = obj.validate_' nm '(val);'] ...
            ['    obj.postset_' nm '()'], ...
            'end', ...
            postsetFunctionStr}, newline);
    end
end

fsstr = strjoin(fsstr, newline);
end

function postsetFunctionStr = resolvePostsetFunction(propname, prop)

    postsetFunctionStr = '';

    if isa(prop, 'file.Attribute')

        if ~isempty(prop.dependent) && ~prop.readonly
    
            if ~isempty(prop.dependent_fullname)
                parentname = prop.dependent_fullname;
            else           
                parentname = prop.dependent;
            end
    
            conditionStr = sprintf(...
                'if isempty(obj.%s) && ~isempty(obj.%s)', ...
                parentname, propname);

            warnIfDependencyMissingString = sprintf(...
                'obj.warnIfAttributeDependencyMissing(''%s'', ''%s'')', ...
                propname, parentname);
    
            postsetFunctionStr = strjoin({...
                sprintf('function postset_%s(obj)', propname), ...
                file.addSpaces(conditionStr, 4), ...
                file.addSpaces(warnIfDependencyMissingString, 8), ...
                file.addSpaces('end', 4), ...
                'end'}, newline);
        end
    end
end
