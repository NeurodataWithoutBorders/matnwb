groups:
- datasets:
  - shape:
    - - null
    - - null
      - null
    dims:
    - - num_times
    - - num_times
      - num_features
    dtype: numeric
    name: data
    doc: 2-D array storing position or direction relative to some reference frame.
    attributes:
    - name: unit
      doc: 'The base unit of measure used to store data. This should be in the SI
        unit. COMMENT: This is the SI unit (when appropriate) of the stored data,
        such as Volts. If the actual data is stored in millivolts, the field ''conversion''
        below describes how to convert the data to the specified SI unit.'
      required: false
      dtype: text
      default_value: meter
    - name: conversion
      doc: Scalar to multiply each element in data to convert it to the specified
        unit
      required: false
      dtype: float32
      default_value: 1
    - name: resolution
      doc: 'Smallest meaningful difference between values in data, stored in the specified
        by unit. COMMENT: E.g., the change in value of the least significant bit,
        or a larger number if signal noise is known to be present. If unknown, use
        -1.0'
      required: false
      dtype: float32
      default_value: 0
  - dtype: text
    name: reference_frame
    doc: Description defining what exactly 'straight-ahead' means.
    quantity: "?"
  doc: 'Direction, e.g., of gaze or travel, or position. The TimeSeries::data field
    is a 2D array storing position or direction relative to some reference frame.
    Array structure: [num measurements] [num dimensions]. Each SpatialSeries has a
    text dataset reference_frame that indicates the zero-position, or the zero-axes
    for direction. For example, if representing gaze direction, ''straight-ahead''
    might be a specific pixel on the monitor, or some other point in space. For position
    data, the 0,0 point might be the top-left corner of an enclosure, as viewed from
    the tracking camera. The unit of data will indicate how to interpret SpatialSeries
    values.'
  neurodata_type_inc: TimeSeries
  neurodata_type_def: SpatialSeries
  attributes:
  - name: help
    doc: 'Value is: Stores points in space over time. The data[] array structure is
      [num samples][num spatial dimensions]'
    dtype: text
    value: Stores points in space over time. The data[] array structure is [num samples][num
      spatial dimensions]
  - name: comments
    doc: Human-readable comments about the TimeSeries. This second descriptive field
      can be used to store additional information, or descriptive information if the
      primary description field is populated with a computer-readable string.
    required: false
    dtype: text
    default_value: no comments
  - name: description
    doc: Description of TimeSeries
    required: false
    dtype: text
    default_value: no description
- groups:
  - doc: IntervalSeries object containing start and stop times of epochs
    quantity: "*"
    neurodata_type_inc: IntervalSeries
  doc: TimeSeries for storing behavioral epochs.  The objective of this and the other
    two Behavioral interfaces (e.g. BehavioralEvents and BehavioralTimeSeries) is
    to provide generic hooks for software tools/scripts. This allows a tool/script
    to take the output one specific interface (e.g., UnitTimes) and plot that data
    relative to another data modality (e.g., behavioral events) without having to
    define all possible modalities in advance. Declaring one of these interfaces means
    that one or more TimeSeries of the specified type is published. These TimeSeries
    should reside in a group having the same name as the interface. For example, if
    a BehavioralTimeSeries interface is declared, the module will have one or more
    TimeSeries defined in the module sub-group 'BehavioralTimeSeries'. BehavioralEpochs
    should use IntervalSeries. BehavioralEvents is used for irregular events. BehavioralTimeSeries
    is for continuous data.
  default_name: BehavioralEpochs
  neurodata_type_inc: NWBDataInterface
  neurodata_type_def: BehavioralEpochs
  attributes:
  - name: help
    doc: Value is 'General container for storing behavioral epochs'
    dtype: text
    value: General container for storing behavioral epochs
- groups:
  - doc: TimeSeries object containing irregular behavioral events
    quantity: "*"
    neurodata_type_inc: TimeSeries
  doc: TimeSeries for storing behavioral events. See description of <a href="#BehavioralEpochs">BehavioralEpochs</a>
    for more details.
  default_name: BehavioralEvents
  neurodata_type_inc: NWBDataInterface
  neurodata_type_def: BehavioralEvents
  attributes:
  - name: help
    doc: Value is 'Position data, whether along the x, xy or xyz axis'
    dtype: text
    value: Position data, whether along the x, xy or xyz axis
- groups:
  - doc: TimeSeries object containing continuous behavioral data
    quantity: "*"
    neurodata_type_inc: TimeSeries
  doc: TimeSeries for storing Behavoioral time series data.See description of <a href="#BehavioralEpochs">BehavioralEpochs</a>
    for more details.
  default_name: BehavioralTimeSeries
  neurodata_type_inc: NWBDataInterface
  neurodata_type_def: BehavioralTimeSeries
  attributes:
  - name: help
    doc: Value is 'General container for storing continuously sampled behavioral data.'
    dtype: text
    value: General container for storing continuously sampled behavioral data.
- groups:
  - doc: TimeSeries object containing time series data on pupil size
    quantity: "+"
    neurodata_type_inc: TimeSeries
  doc: Eye-tracking data, representing pupil size.
  default_name: PupilTracking
  neurodata_type_inc: NWBDataInterface
  neurodata_type_def: PupilTracking
  attributes:
  - name: help
    doc: Value is 'Eye-tracking data, representing pupil size'
    dtype: text
    value: Eye-tracking data, representing pupil size
- groups:
  - doc: SpatialSeries object containing data measuring direction of gaze
    quantity: "*"
    neurodata_type_inc: SpatialSeries
  doc: Eye-tracking data, representing direction of gaze.
  default_name: EyeTracking
  neurodata_type_inc: NWBDataInterface
  neurodata_type_def: EyeTracking
  attributes:
  - name: help
    doc: Value is 'Eye-tracking data, representing direction of gaze'
    dtype: text
    value: Eye-tracking data, representing direction of gaze
- groups:
  - doc: SpatialSeries object containing direction of gaze travel
    quantity: "*"
    neurodata_type_inc: SpatialSeries
  doc: With a CompassDirection interface, a module publishes a SpatialSeries object
    representing a floating point value for theta. The SpatialSeries::reference_frame
    field should indicate what direction corresponds to 0 and which is the direction
    of rotation (this should be clockwise). The si_unit for the SpatialSeries should
    be radians or degrees.
  default_name: CompassDirection
  neurodata_type_inc: NWBDataInterface
  neurodata_type_def: CompassDirection
  attributes:
  - name: help
    doc: Value is 'Direction as measured radially. Spatial series reference frame
      should indicate which direction corresponds to zero and what is the direction
      of positive rotation'
    dtype: text
    value: Direction as measured radially. Spatial series reference frame should indicate
      which direction corresponds to zero and what is the direction of positive rotation
- groups:
  - doc: SpatialSeries object containing position data
    quantity: "+"
    neurodata_type_inc: SpatialSeries
  doc: Position data, whether along the x, x/y or x/y/z axis.
  default_name: Position
  neurodata_type_inc: NWBDataInterface
  neurodata_type_def: Position
  attributes:
  - name: help
    doc: Value is 'Position data, whether along the x, xy or xyz axis'
    dtype: text
    value: Position data, whether along the x, xy or xyz axis

