groups:
- datasets:
  - shape:
    - - null
    - - null
      - null
    dims:
    - - num_times
    - - num_times
      - num_features
    dtype: numeric
    name: data
    doc: Values of each feature at each time.
    attributes:
    - name: unit
      doc: 'The base unit of measure used to store data. This should be in the SI
        unit. COMMENT: This is the SI unit (when appropriate) of the stored data,
        such as Volts. If the actual data is stored in millivolts, the field ''conversion''
        below describes how to convert the data to the specified SI unit.'
      required: false
      dtype: text
      default_value: see 'feature_units'
    - name: conversion
      doc: Scalar to multiply each element in data to convert it to the specified
        unit
      required: false
      dtype: float32
      default_value: 1
    - name: resolution
      doc: 'Smallest meaningful difference between values in data, stored in the specified
        by unit. COMMENT: E.g., the change in value of the least significant bit,
        or a larger number if signal noise is known to be present. If unknown, use
        -1.0'
      required: false
      dtype: float32
      default_value: 0
  - shape:
    - null
    dims:
    - num_features
    dtype: text
    name: feature_units
    doc: Units of each feature.
    quantity: "?"
  - shape:
    - null
    dims:
    - num_features
    dtype: text
    name: features
    doc: Description of the features represented in TimeSeries::data.
  doc: Abstract features, such as quantitative descriptions of sensory stimuli. The
    TimeSeries::data field is a 2D array, storing those features (e.g., for visual
    grating stimulus this might be orientation, spatial frequency and contrast). Null
    stimuli (eg, uniform gray) can be marked as being an independent feature (eg,
    1.0 for gray, 0.0 for actual stimulus) or by storing NaNs for feature values,
    or through use of the TimeSeries::control fields. A set of features is considered
    to persist until the next set of features is defined. The final set of features
    stored should be the null set.
  neurodata_type_inc: TimeSeries
  neurodata_type_def: AbstractFeatureSeries
  attributes:
  - name: help
    doc: Value is 'Features of an applied stimulus. This is useful when storing the
      raw stimulus is impractical'
    dtype: text
    value: Features of an applied stimulus. This is useful when storing the raw stimulus
      is impractical
  - name: comments
    doc: Human-readable comments about the TimeSeries. This second descriptive field
      can be used to store additional information, or descriptive information if the
      primary description field is populated with a computer-readable string.
    required: false
    dtype: text
    default_value: no comments
  - name: description
    doc: Description of TimeSeries
    required: false
    dtype: text
    default_value: no description
- datasets:
  - shape:
    - null
    dims:
    - num_times
    dtype: text
    name: data
    doc: Annotations made during an experiment.
    attributes:
    - name: resolution
      doc: Value is -1.0
      dtype: float
      value: -1
    - name: unit
      doc: Value is 'n/a'
      dtype: text
      value: n/a
    - name: conversion
      doc: Scalar to multiply each element in data to convert it to the specified
        unit
      required: false
      dtype: float32
      default_value: 1
  doc: Stores, eg, user annotations made during an experiment. The TimeSeries::data[]
    field stores a text array, and timestamps are stored for each annotation (ie,
    interval=1). This is largely an alias to a standard TimeSeries storing a text
    array but that is identifiable as storing annotations in a machine-readable way.
  neurodata_type_inc: TimeSeries
  neurodata_type_def: AnnotationSeries
  attributes:
  - name: help
    doc: Value is 'Time-stamped annotations about an experiment'
    dtype: text
    value: Time-stamped annotations about an experiment
  - name: comments
    doc: Human-readable comments about the TimeSeries. This second descriptive field
      can be used to store additional information, or descriptive information if the
      primary description field is populated with a computer-readable string.
    required: false
    dtype: text
    default_value: no comments
  - name: description
    doc: Description of TimeSeries
    required: false
    dtype: text
    default_value: no description
- datasets:
  - shape:
    - null
    dims:
    - num_times
    dtype: int8
    name: data
    doc: ">0 if interval started, <0 if interval ended."
    attributes:
    - name: resolution
      doc: Value is -1.0
      dtype: float
      value: -1
    - name: unit
      doc: Value is 'n/a'
      dtype: text
      value: n/a
    - name: conversion
      doc: Scalar to multiply each element in data to convert it to the specified
        unit
      required: false
      dtype: float32
      default_value: 1
  doc: Stores intervals of data. The timestamps field stores the beginning and end
    of intervals. The data field stores whether the interval just started (>0 value)
    or ended (<0 value). Different interval types can be represented in the same series
    by using multiple key values (eg, 1 for feature A, 2 for feature B, 3 for feature
    C, etc). The field data stores an 8-bit integer. This is largely an alias of a
    standard TimeSeries but that is identifiable as representing time intervals in
    a machine-readable way.
  neurodata_type_inc: TimeSeries
  neurodata_type_def: IntervalSeries
  attributes:
  - name: help
    doc: Value is 'Stores the start and stop times for events'
    dtype: text
    value: Stores the start and stop times for events
  - name: comments
    doc: Human-readable comments about the TimeSeries. This second descriptive field
      can be used to store additional information, or descriptive information if the
      primary description field is populated with a computer-readable string.
    required: false
    dtype: text
    default_value: no comments
  - name: description
    doc: Description of TimeSeries
    required: false
    dtype: text
    default_value: no description
- groups:
  - datasets:
    - dtype: text
      name: band_name
      doc: the name of the band e.g. theta
      neurodata_type_inc: VectorData
      attributes:
      - name: description
        doc: value is 'the name of the band e.g. theta'
        dtype: text
        value: the name of the band e.g. theta
    - shape:
      - null
      - 2
      dims:
      - num_bands
      - low, high
      dtype: float
      name: band_limits
      doc: Low and high limit of each band in Hz. If it is a Gaussian filter, use
        2 SD on either side of the center
      neurodata_type_inc: VectorData
      attributes:
      - name: description
        doc: value is 'Low and high limit of each band in Hz. If it is a Gaussian
          filter, use 2 SD on either side of the center'
        dtype: text
        value: Low and high limit of each band in Hz. If it is a Gaussian filter,
          use 2 SD on either side of the center
    - shape:
      - null
      dims:
      - num_bands
      dtype: float
      name: band_mean
      doc: The mean Gaussian filters in Hz
      neurodata_type_inc: VectorData
      attributes:
      - name: description
        doc: The mean Gaussian filters in Hz
        dtype: text
        value: The mean Gaussian filters in Hz
    - shape:
      - null
      dims:
      - num_bands
      dtype: float
      name: band_stdev
      doc: The standard devaition of Gaussian filters in Hz
      neurodata_type_inc: VectorData
      attributes:
      - name: description
        doc: The standard devaition of Gaussian filters in Hz
        dtype: text
        value: The standard devaition of Gaussian filters in Hz
    name: bands
    doc: A table for describing the bands that this series was generated from. There
      should be one row in this table for each band
    neurodata_type_inc: DynamicTable
  datasets:
  - shape:
    - null
    - null
    - null
    dims:
    - num_times
    - num_channels
    - num_bands
    dtype: numeric
    name: data
    doc: The data goes here
    attributes:
    - name: conversion
      doc: Scalar to multiply each element in data to convert it to the specified
        unit
      required: false
      dtype: float32
      default_value: 1
    - name: resolution
      doc: 'Smallest meaningful difference between values in data, stored in the specified
        by unit. COMMENT: E.g., the change in value of the least significant bit,
        or a larger number if signal noise is known to be present. If unknown, use
        -1.0'
      required: false
      dtype: float32
      default_value: 0
    - name: unit
      doc: 'The base unit of measure used to store data. This should be in the SI
        unit. COMMENT: This is the SI unit (when appropriate) of the stored data,
        such as Volts. If the actual data is stored in millivolts, the field ''conversion''
        below describes how to convert the data to the specified SI unit.'
      dtype: text
  - dtype: text
    name: metric
    doc: 'recommended: phase, amplitude, power'
  links:
  - name: source_timeseries
    doc: HDF5 link to TimesSeries that this data was calculated from. Metadata about
      electrodes and their position can be read from that ElectricalSeries so it is
      not necessary to store that information here
    target_type: TimeSeries
    quantity: "?"
  doc: Holds spectral analysis of a timeseries. For instance of LFP or a speech signal
  neurodata_type_inc: TimeSeries
  neurodata_type_def: DecompositionSeries
  attributes:
  - name: comments
    doc: Human-readable comments about the TimeSeries. This second descriptive field
      can be used to store additional information, or descriptive information if the
      primary description field is populated with a computer-readable string.
    required: false
    dtype: text
    default_value: no comments
  - name: description
    doc: Description of TimeSeries
    required: false
    dtype: text
    default_value: no description
  - name: help
    doc: Value is 'General time series object'
    dtype: text
    value: General time series object
- datasets:
  - name: spike_times_index
    doc: the index into the spike_times dataset
    quantity: "?"
    neurodata_type_inc: VectorIndex
  - dtype: double
    name: spike_times
    doc: the spike times for each unit
    quantity: "?"
    neurodata_type_inc: VectorData
  - name: obs_intervals_index
    doc: the index into the obs_intervals dataset
    quantity: "?"
    neurodata_type_inc: VectorIndex
  - shape:
    - null
    - 2
    dims:
    - num_intervals
    - start|end
    dtype: double
    name: obs_intervals
    doc: the observation intervals for each unit
    quantity: "?"
    neurodata_type_inc: VectorData
  - name: electrodes_index
    doc: the index into electrodes
    quantity: "?"
    neurodata_type_inc: VectorIndex
  - name: electrodes
    doc: the electrode that each spike unit came from
    quantity: "?"
    neurodata_type_inc: DynamicTableRegion
  - dtype:
      target_type: ElectrodeGroup
      reftype: object
    name: electrode_group
    doc: the electrode group that each spike unit came from
    quantity: "?"
    neurodata_type_inc: VectorData
  - shape:
    - null
    - null
    dims:
    - num_units
    - num_samples
    dtype: float
    name: waveform_mean
    doc: the spike waveform mean for each spike unit
    quantity: "?"
    neurodata_type_inc: VectorData
  - shape:
    - null
    - null
    dims:
    - num_units
    - num_samples
    dtype: float
    name: waveform_sd
    doc: the spike waveform standard deviation for each spike unit
    quantity: "?"
    neurodata_type_inc: VectorData
  doc: Data about spiking units. Event times of observed units (e.g. cell, synapse,
    etc.) should be concatenated and stored in spike_times.
  default_name: Units
  neurodata_type_inc: DynamicTable
  neurodata_type_def: Units
  attributes:
  - name: help
    doc: Value is 'Data about spiking units'
    dtype: text
    value: Data about spiking units
  - name: colnames
    doc: The names of the columns in this table. This should be used to specifying
      an order to the columns
    dtype: ascii
    shape:
    - null
    dims:
    - num_columns
  - name: description
    doc: Description of what is in this dynamic table
    dtype: text

