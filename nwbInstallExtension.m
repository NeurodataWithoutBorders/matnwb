function nwbInstallExtension(extensionName)
% nwbInstallExtension - Installs a specified NWB extension.
%
%   nwbInstallExtension(extensionName) installs a Neurodata Without Borders 
%   (NWB) extension to extend the functionality of the core NWB schemas. 
%   extensionName is a scalar string or a string array, containing the name
%   of one or more extensions from the Neurodata Extesions Catalog
%
% Usage:
%   nwbInstallExtension(extensionName)
%
% Valid Extension Names:
%  - "ndx-miniscope"
%  - "ndx-simulation-output"
%  - "ndx-ecog"
%  - "ndx-fret"
%  - "ndx-icephys-meta"
%  - "ndx-events"
%  - "ndx-nirs"
%  - "ndx-hierarchical-behavioral-data"
%  - "ndx-sound"
%  - "ndx-extract"
%  - "ndx-photometry"
%  - "ndx-acquisition-module"
%  - "ndx-odor-metadata"
%  - "ndx-whisk"
%  - "ndx-ecg"
%  - "ndx-franklab-novela"
%  - "ndx-photostim"
%  - "ndx-multichannel-volume"
%  - "ndx-depth-moseq"
%  - "ndx-probeinterface"
%  - "ndx-dbs"
%  - "ndx-hed"
%  - "ndx-ophys-devices"
%
% Example:
%   % Install the "ndx-miniscope" extension
%   nwbInstallExtension("ndx-miniscope")
%
% See also:
%   matnwb.extension.listExtensions, matnwb.extension.installExtension

    arguments
        extensionName (1,:) string {mustBeMember(extensionName, [...
            "ndx-miniscope", ...
            "ndx-simulation-output", ...
            "ndx-ecog", ...
            "ndx-fret", ...
            "ndx-icephys-meta", ...
            "ndx-events", ...
            "ndx-nirs", ...
            "ndx-hierarchical-behavioral-data", ...
            "ndx-sound", ...
            "ndx-extract", ...
            "ndx-photometry", ...
            "ndx-acquisition-module", ...
            "ndx-odor-metadata", ...
            "ndx-whisk", ...
            "ndx-ecg", ...
            "ndx-franklab-novela", ...
            "ndx-photostim", ...
            "ndx-multichannel-volume", ...
            "ndx-depth-moseq", ...
            "ndx-probeinterface", ...
            "ndx-dbs", ...
            "ndx-hed", ...
            "ndx-ophys-devices" ...
            ] ...
        )} = []
    end
    if isempty(extensionName)
        T = matnwb.extension.listExtensions();
        extensionList = join( compose("  %s", [T.name]), newline );
        error("Please specify the name of an extension. Available extensions:\n\n%s\n", extensionList)
    else
        matnwb.extension.installExtension(extensionName)
    end
end
